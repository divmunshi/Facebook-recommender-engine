version: "3.8"

services:
  app:
    build: .
    ports:
      - "8080:8080"
    volumes:
      - .:/app
    working_dir: /app
    depends_on:
      - kafka
    environment:
      FLASK_APP: app.py
      FLASK_ENV: development
    command: "flask run --host=0.0.0.0 --port=8080" #comen
  
  redis:
    image: redis
    restart: always
    user: root
    command: redis-server --requirepass ${REDIS_PASSWORD}
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - ./redis-data:/data
    container_name: backprop-bunch-redis-container
  
  zookeeper:
    user: root
    image: bitnami/zookeeper:latest
    restart: always
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./data_zookeeper:/bitnami/zookeeper
      - ./data_zookeeper_conf:/bitnami/zookeeper/conf

  kafka:
    user: root
    image: bitnami/kafka:latest
    restart: always
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENERS=INSIDE://:9092, OUTSIDE://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=INSIDE://127.0.0.1:9092, OUTSIDE://kafka:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=INSIDE
    volumes:
      - ./data_kafka:/bitnami/kafka
      - ./data_kafka_conf:/bitnami/kafka/config
    depends_on:
      - zookeeper

  worker:
    build: .
    working_dir: /src
    command: python -u kafka-consumers/worker-logging.py
    volumes:
      - .:/src
    depends_on:
      - kafka
  test:
    build: .
    working_dir: /src
    command: python -u pg_intervals.py
    volumes:
      - .:/src
    

  postgres:
    user: root
    image: postgres:13.3
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: backprop 
      POSTGRES_DB: backprop-bunch
    volumes:
      - vault:/var/lib/postgresql/data

  pgadmin:
    user: root
    image: dpage/pgadmin4
    restart: always
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: root@root.com
      PGADMIN_DEFAULT_PASSWORD: backprop
    volumes:
      - ./data_admin:/var/lib/pgadmin
  jupyter:
    user: root
    build:
      context: .
      dockerfile: ./Dockerfile-jupyter
    container_name: jupyter
    environment:
    - JUPYTER_TOKEN=${JUPYTER_PASSWORD}
    volumes:
      - ./:/home/jovyan/work
    ports:
      - 8888:8888
volumes:
  vault:
    driver: local